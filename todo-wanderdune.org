* FIXME:
- Error Handling
- Keywords
- Tags
- Unit Tests
- htmlwriter
- config
- router: a trait that returns the absolute path for keyword, tag, post, year, year/month, year/month/day
- the collection & parsing of items should happen on multiple threads possible with the rust go channels so that
  even for large post bases, the parsing is fast
- the writing of items could also happen on multiple threads, if the write actions are stored in a dependency tree,
i.e. each folder for a year would be a new node in the tree, each month for each year a subnode of the respective tree node
  then, we could paraellilize all years, and thend for each year all months
- If I need trait object downcasting, I can use: https://crates.io/crates/downcast-rs

    fn new(configuration: Rc<Configuration>, path: PathBuf, payload: Vec<(String, Vec<&'a BlogPost>)>) -> GroupedDuneBuilder<'a> {

- 
* What does a action require?
- write overview
- write index
- write post
- copy files
- write project page
- create directory (if it doesn't exist  yet)
- 
* Tasks
** TODO find a solution for posts
** TODO merge with & group?
** TODO Somehow include the option to have PostBuilder.write_post use the filename from the router?
** TODO I don't need into_collected anymore, except if I really want to do multi-threading?

